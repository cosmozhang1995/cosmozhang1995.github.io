---
layout: post
title: BP神经网络的推导
pagetype: post
author: Cosmo
---

BP神经网络是今天神经网络算法的基础，它也是一个经典的数学优化问题，从数学的角度上来讲其实它并不深奥，只是以前不懂数学的我一直没有弄懂。最近由于学习的需要，重新捡起来看了一看，觉得似乎瞬间理解了BP的原理。

# 神经网络的数学描述

作如下假设：
- 网络共有n层
- 激活函数为f(x)
- 对第 l+1 层：
	- neuron数目为s_(l+1)
	- 第j个neuron接收上一级第i个neuron的输入为：x_ij^((l+1))
	- 第j个neuron与上一级第i个neuron的连接权值为：w_ij^((l+1))
	- 第j个neuron的偏置为：b_j^((l+1))
	- 第j个neuron的输入和为：u_j^((l+1))=∑24_(i=1)^(s_l)▒〖w_ij^((l+1)) x_ij^((l+1)) 〗+b_j^((l+1))
	- 第j个neuron的激活输出为：t_j^((l+1))=f(u_j^((l+1) ))


首先说梯度下降（gradient descent）原则，要优化一个损失函数f(x)，就是要找到它的极小值，也就是要让x向负梯度方向移动，梯度下降法每次迭代将x向负梯度方向移动η，η为学习率，也就是：

x_(n+1)=x_n−ηf^′ (x_n )   ,  η>0


然后说BP算法，在BP算法中，我们要优化的也是损失函数，损失函数取成残差的模方，即

E=1/2 ‖y−u^((n) ) ‖^2

将BP算法看作问题g，即E=g(W^2,W^3,…,W^n,b^1,b^2,…,b^n;x^1)，优化权值W^i 和偏置b^i 。

BP的精髓在于δ规则，而δ规则的精髓在于它建立了相邻两层神经元的损失函数的偏导的关系，这个关系可以解释为：后级神经元的误差依网络权重传递给前级神经元。下面给出δ规则的推导，注意偏导数的链式法则（chain rule）会在推导中起到重要的作用。

首先，我们定义一个δ值，δ的含义是“误差对偏置项的偏导”

δ_i^((l))=∂E/(∂b_i^((l)) )=∂E/(∂u_i^((l)) )  (∂u_i^((l)))/(∂b_i^((l)) )=∂E/(∂u_i^((l)) )⋅1=∂E/(∂u_i^((l)) )

上面这个等式非常重要，他告诉我们δ_i^((l))=∂E/(∂b_i^((l)) )=∂E/(∂u_i^((l)) )，原因很简单，因为b在u中是偏置项，也就是u说对于b的偏导是1。

下面推导相邻两层之间δ的关系。

δ_i^((l))=∂E/(∂u_i^((l)) )=∑24_(j=1)^(s_(l+1))▒〖∂E/(∂u_j^((l+1)) )  (∂u_j^((l+1)))/(∂u_i^((l)) )〗=∑24_(j=1)^(s_(l+1))▒〖δ_i^((l+1))  (∂u_j^((l+1)))/(∂u_i^((l)) )〗

其中

(∂u_j^((l+1)))/(∂u_i^((l)) )=∂(b_j^((l+1))+∑24_(k=1)^(s_l)▒〖w_kj^((l+1)) f(u_k^((l)) ) 〗)/(∂u_i^((l)) )=(∂w_ij^((l+1)) f(u_i^((l)) ))/(∂u_i^((l)) )=w_ij^((l+1)) f^′ (u_i^((l)) )

因此得到

δ_i^((l))=f^′ (u_i^((l)) ) ∑24_(j=1)^(s_(l+1))▒〖w_ij^((l+1)) δ_j^((l+1)) 〗

观察上式的形式，我们可以给出如下解释：预测误差在神经网络中反向传递，前一个神经元对于后一个神经元的误差的贡献就是它们之间的连接权值，而某一个神经元所造成的误差是它对所有下级神经元造成的误差的总和。

有了δ规则，我们可以确定所有的∂E/(∂b_i^((l)) )，也就是说确定了所有的偏置项的优化规则，而权值的优化规则也很好确定：

∂E/(∂w_ij^((l)) )=∂E/(∂u_j^((l)) )  (∂u_j^((l)))/(∂w_ij^((l)) )=δ_j^((l)) x_ij^((l))

上面所有的推导形成了这样一个优化思路：通过在层与层之间的权值关系确定所有δ，通过所有δ确定所有权值和偏置的梯度方向，进而确定优化规则。

在层之间递归确定δ时，还缺少最后一环，即最后层也就是输出层的δ值，这也不难求：

δ_i^((n))=∂E/(∂u_i^((n)) )=(y_i^((n))−f(u_i^((n)) ))(−f^′ (u_i^((n)) ))

看，一切都是链式法则。现在我们有了递归的初值，有了递归规则，有了递归项对于优化规则的决定规则，就可以逐次迭代优化网络了。